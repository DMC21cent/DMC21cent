devtools::load_all()
install.packages("ggforce")
install.packages("gghighlight")
devtools::load_all()
knitr::opts_chunk$set(
collapse = TRUE,
echo = TRUE,
eval = TRUE,
warning = FALSE,
message = FALSE,
fig.width=10,
fig.height=5,
# dpi = 85,
# out.width = "100%",
# out.height = "50%",
comment = "#>"
)
library(dplyr)
library(ggplot2)
library(scales)
library(plotly)
devtools::load_all()
library(DMC21cent)
sl_summary(adsl,
vars = "SEX",
kinds = "bar_binom",
titles = "Female Subjects (%)",
trt = "TRT01P")
sl_summary(adsl,
vars = list("SEX" = "M"),  # `list()` only works for `bar_binom` kind
kinds = "bar_binom",
titles = "Male Subjects (%)",
trt = "TRT01P")
sl_summary(adsl,
vars = c(list("SEX" = "M"), "SEX"),
kinds = c("bar_binom"),
trt = "TRT01P",
show_plots = TRUE,
titles = c("Male Subjects (%)", "Female Subjects (%)"),
ncol = 1)
# or you can save the output of sl_summary() in an object.
devtools::load_all()
knitr::opts_chunk$set(
collapse = TRUE,
echo = TRUE,
eval = TRUE,
warning = FALSE,
message = FALSE,
fig.width=10,
fig.height=5,
# dpi = 85,
# out.width = "100%",
# out.height = "50%",
comment = "#>"
)
library(dplyr)
library(ggplot2)
library(scales)
library(plotly)
devtools::load_all()
# knitr::opts_chunk$set(
#   collapse = TRUE,
#   echo = TRUE,
#   eval = TRUE,
#   warning = FALSE,
#   message = FALSE,
#   fig.width=10,
#   fig.height=5,
#  # dpi = 85,
#   # out.width = "100%",
#   # out.height = "50%",
#   comment = "#>"
# )
library(dplyr)
library(ggplot2)
library(scales)
library(plotly)
devtools::load_all()
devtools::load_all()
knitr::opts_chunk$set(
collapse = TRUE,
echo = TRUE,
eval = TRUE,
warning = FALSE,
message = FALSE,
fig.width=10,
fig.height=5,
# dpi = 85,
# out.width = "100%",
# out.height = "50%",
comment = "#>"
)
library(dplyr)
library(ggplot2)
library(scales)
library(plotly)
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::load_all()
knitr::opts_chunk$set(
collapse = TRUE,
echo = TRUE,
eval = TRUE,
warning = FALSE,
message = FALSE,
fig.width=10,
fig.height=5,
# dpi = 85,
# out.width = "100%",
# out.height = "50%",
comment = "#>"
)
library(dplyr)
library(ggplot2)
library(scales)
library(plotly)
devtools::load_all()
sl_summary(adsl,
vars = "SEX",
kinds = "bar_binom",
titles = "Female Subjects (%)",
trt = "TRT01P")
patient_profile(data = adcm,
usubjid = "02-718-1371",
str_wrap_ae_cm = 25,
kind = 'cm')
patient_profile(data = adlbc,
usubjid = "02-718-1371",
kind = 'lab',
ncol_lab = 1,
filter_safety_flag_lab = "Y",
transform_lab = 'log',
params_lab = c("Alanine Aminotransferase (U/L)",
"Aspartate Aminotransferase (U/L)",
"Bilirubin (umol/L)"),
selected_visit = c("Baseline", "Week 2", "Week 4", "Week 6", "Week 8", "End of Treatment"))
patient_profile(data = adsl,
usubjid = "02-718-1371",
kind = 'summary')
patient_profile(data = adsl,
usubjid = "02-718-1371",
kind = 'summary')
patient_profile(data = adcm,
usubjid = "02-718-1371",
str_wrap_ae_cm = 25,
kind = 'cm')
lab_spaghetti(adlb = adlbc,
param_filter = "Creatine Kinase (U/L)",
axis_tick_size = 8,
x_axis_wrap = 6,
selected_visit = c("Baseline", "Week 2", "Week 4", "Week 6", "Week 8", "End of Treatment"))
lab_summary(adlb = adlbhy,
kind = "shift",
param_filter = "Alanine Aminotransferase (U/L)",
title = NULL,  # automatically generated title,
shift_breaks_vec = NULL # automatically generated 25X breaks, and 50X labels
)
lab_summary(adlb = adlbhy,
kind = "shift",
param_filter = "Alanine Aminotransferase (U/L)",
title = NULL,  # automatically generated title,
shift_breaks_vec = NULL # automatically generated 25X breaks, and 50X labels
)
lab_summary(adlb = adlbc,
kind = "box",
param_filter = "Cholesterol (mmol/L)",
selected_visit = c("Baseline", "Week 2", "Week 4", "Week 6", "Week 8", "End of Treatment"),
title = NULL  # an auto generated title
)
lab_summary(adlb = adlbc,
kind = "box",
param_filter = "Cholesterol (mmol/L)",
selected_visit = c("Baseline", "Week 2", "Week 4", "Week 6", "Week 8", "End of Treatment"),
title = NULL  # an auto generated title
)
lab_summary(adlb = adlbc,
kind = "abnormal",
param_filter = "Cholesterol (mmol/L)",
selected_visit = c("Baseline", "Week 2", "Week 4", "Week 6", "Week 8", "End of Treatment"),
title = NULL  # an auto generated title
)
lab_summary(adlb = adlbc,
kind = "abnormal",
param_filter = "Cholesterol (mmol/L)",
selected_visit = c("Baseline", "Week 2", "Week 4", "Week 6", "Week 8", "End of Treatment"),
title = NULL  # an auto generated title
)
ae_summary(adae = adae,
adsl = adsl,
kind = "volcano_adjpval",
pval_cutoff = 1,
adjpval_cutoff = 0.9,
title = "Comparison of adverse events (preferred terms) by treatment",
subtitle = "Xanomeline High Dose vs. Placebo, Safety analysis set",
caption = "P-value is from a Cox regression model, adjusted for multiple comparisons (based on false discovery rate)."
)
